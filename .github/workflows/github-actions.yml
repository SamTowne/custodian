name: 'Github Actions'
permissions:
  id-token: write # required to use OIDC authentication
  contents: read # required to checkout the code from the repo

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  terraform:
    if: ${{ !github.event.act }} # skip during local actions testing
    name: 'TF GitHub Actions'
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        working-directory: ./infra
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::272773485930:role/custodian-272773485930-github-oidc #CONFIGURE THIS for the role created in ./modules/github-actions-iam/iam.tf
        aws-region: us-west-2 #CONFIGURE THIS
        role-duration-seconds: 900

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check
      env:
        TF_ACTION_WORKING_DIR: .
      continue-on-error: true

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      if: github.event_name == 'pull_request'
      run: terraform plan -no-color
      continue-on-error: true

    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve

  services_diff:
    name: 'Check services for diff'
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
          fetch-depth: 2
    - id: services_diff
      run: ::set-output name=services_diff::git diff --name-only HEAD^ HEAD | awk '{split($0,a,"services"); {split($0,b,"/"); print b[2]}}' | uniq
    - name: Read output
      run: |
        echo 'Found diff in these services:'
        echo '${{steps.services_diff.outputs.services_diff}}'
    outputs:
      services_diff: ${{steps.services_diff.outputs.services_diff}}
  
  build:
    name: 'Build Lambda Packages'
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        shell: bash
    needs: services_diff
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Build Lambda Package
        run: |
          echo "services to build: "
          echo "${{needs.services_diff.outputs.services_diff}}"
          echo "building lambda package(s)..."
          mkdir app
          mkdir app/build
          pip install --target app/build/python --verbose --no-cache-dir c7n --upgrade
          echo "c7n installed..."
          ls -lsta app/build/python
          cp -r services/processor/* app/build/python
          echo "lambda package contents..."
          ls -lsta app/build/python
          echo "compressing package contents..."
          zip -r app.zip app/build/python
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::272773485930:role/custodian-272773485930-github-oidc #CONFIGURE THIS for the role created in ./modules/github-actions-iam/iam.tf
          aws-region: us-west-2 #CONFIGURE THIS
          role-duration-seconds: 900
      
      - name: Upload Lambda Package
        run: |
          echo "Uploading lambda package..."
          pip install awscli
          aws s3 cp app.zip s3://cloud-custodian-lambda-packages-272773485930/lambda_packages/processor/app.zip --region us-west-2

  test:
    name: 'Validate c7n policies'
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        shell: bash

    steps:
      - name: c7n validate policies
        run:
          echo "validating c7n policies..."
          custodian validate services/processor/policies/**