name: 'Manage Infrastructure'
permissions:
  id-token: write # required to use OIDC authentication
  contents: read # required to checkout the code from the repo

on:
  push:
    branches:
      - "main"
      - "dev"
    paths:
    - 'core/**'
  pull_request:
    branches:
      - "main"
      - "dev"
    paths:
    - 'core/**'

jobs:
  terraform:
    if: ${{ !github.event.act }} # skip during local actions testing
    name: 'TF GitHub Actions'
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        working-directory: ./core
        shell: bash
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::272773485930:role/custodian-272773485930-github-oidc #CONFIGURE THIS for the role created in ./modules/github-actions-iam/iam.tf
        aws-region: us-west-2 #CONFIGURE THIS#
        role-duration-seconds: 900

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check
      env:
        TF_ACTION_WORKING_DIR: .
      continue-on-error: true

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      if: github.event_name == 'pull_request'
      run: terraform plan -no-color"
      continue-on-error: true

    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    # - name: Terraform Apply
    #   run: terraform apply -auto-approve -state="core/terraform.tfstate"